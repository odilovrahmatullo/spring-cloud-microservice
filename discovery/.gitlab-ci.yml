#image: openjdk:11-jdk-stretch
#
#stages:
#  - test
#  - build
#  - deploy
#
#before_script:
#  - echo "before_script"
#  - chmod +x gradlew
#  - apt-get update -qq
#  - apt-get install -qq git
#  - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#  - eval $(ssh-agent -s)
#  - ssh-add <(echo "$SSH_PRIVATE_KEY")
#  - mkdir -p ~/.ssh
#  - chmod 700 ~/.ssh
#  - ssh-keyscan $DEV_HOST > ~/.ssh/known_hosts
#  - chmod 644 ~/.ssh/known_hosts
#  - export GRADLE_USER_HOME=/cache/.gradle
#  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#
#create_service:
#  stage: test
#  script:
#    - 'ssh $DEV_USER@$DEV_HOST /opt/ent/./service_creater $CI_PROJECT_NAME'
#  only:
#    - prod
#
#build:
#  stage: build
#  script:
#    - ./gradlew build -x test
#    - 'scp build/libs/*.jar $DEV_USER@$DEV_HOST:/opt/ent/$CI_PROJECT_NAME'
#  # artifacts:
#  #   paths:
#  #     - build/libs/*.jar
#  only:
#    - master
#
#restart:
#  tags:
#    - ent_back_1
#  stage: deploy
#  script:
#    - 'ssh $DEV_USER@$DEV_HOST systemctl restart $CI_PROJECT_NAME.service'
#  only:
#    - master


variables:
  IMAGE_NAME: botir9544/open-budget
  IMAGE_TAG: discovery-0.1
  CONTAINER_NAME: open-budget-discovery
  SERVICE_NAME: ob-discovery

stages:
  - build
  - deploy

build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - master

deploy:
  image: kroniak/ssh-client
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - apk update
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_HOST > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $DEV_USER@$DEV_HOST "cd /opt/docker && sh start.sh -u $REGISTRY_USER -p $REGISTRY_PASS -c $CONTAINER_NAME -i $IMAGE_NAME -t $IMAGE_TAG -s $SERVICE_NAME > logs/log.txt"
  only:
    - master
